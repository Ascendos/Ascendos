#!/bin/sh
echo "======================="
echo "=== setup-kojidconf ==="
echo "======================="

# Pull in default vars
. `pwd`/defaults

# Check that all the externally defined variables we use in this script are initailized
# note: SCN is allowed to be blank so there's no need to pass it into the check
echo -n "Checking the defaults of the following: "
for i in TOP KOJIDCONF HOSTNAME PKI DISTRIBUTION NOTIFYAS; do
        if [ \$$i ]; then
                echo -n "$i "
                eval n=\$$i
                if [ ! "$n" ]; then
                        echo
                        echo "conf error: $i is NOT defined/set in the defaults file. exiting."
                        exit 1
                fi
        fi
done
echo " (OK)"

# Note the escape chars.. without these, perl and bash do nasty things 
TOPDIR=$TOP/koji


cat > $KOJIDCONF << EOF
[kojid]
; The number of seconds to sleep between tasks
; sleeptime=15

; The maximum number of jobs that kojid will handle at a time
; maxjobs=10

; The minimum amount of free space (in MBs) required for each build root
; minspace=8192

; The directory root where work data can be found from the koji hub
topdir=$TOPDIR

; The directory root for temporary storage
; workdir=/tmp/koji

; The directory root for mock
; mockdir=/var/lib/mock

; The user to run as when doing builds
; mockuser=kojibuilder

; The vendor to use in rpm headers
; vendor=Koji

; The packager to use in rpm headers
packager=Scientific Linux

; The distribution to use in rpm headers
distribution=$DISTRIBUTION

; The _host string to use in mock
mockhost=redhat-linux-gnu

; The URL for the xmlrpc server
server=http://$HOSTNAME/kojihub

; The URL for the packages tree
pkgurl=http://$HOSTNAME/packages

; A space-separated list of hostname:repository[:use_common] tuples
; that kojid is authorized to checkout from (no quotes).
; Wildcards (as supported by fnmatch) are allowed.
; If use_common is specified and is one of "false", "no", "off", or "0"
; (without quotes), then kojid will not attempt to checkout
; a common/ dir when checking out sources from the source control system.
; Otherwise, it will attempt to checkout a common/
; dir, and will raise an exception if it cannot.
allowed_scms=$SCM

; The mail host to use for sending email notifications
smtphost=$HOSTNAME

; The From address used when sending email notifications
from_addr=Koji Build System <buildsys@$HOSTNAME>

;configuration for SSL athentication

; client certificate
; (Basically the 'username' of the buildhost
;  where username = hostname)
cert = /etc/pki/koji/$HOSTNAME.pem

; certificate of the CA that issued the client certificate
ca = /etc/pki/koji/koji_ca_cert.crt

; certificate of the CA that issued the HTTP server certificate
serverca = /etc/pki/koji/koji_ca_cert.crt
EOF

# DO NOT RESTART httpd/koji just yet
# some config needs doing in setup-hub-loose-ends
