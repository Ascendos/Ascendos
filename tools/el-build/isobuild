#!/usr/bin/env bash
#
#############################################################################
#############################################################################
#
# isobuild: a complete and deterministic environment and wrapper for pungi
#
#############################################################################
#
# Copyright 2011 Douglas McClendon <dmc AT filteredperception DOT org>
#
#############################################################################
#
# This file is part of X.
#
#    X is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    X is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with X.  If not, see <http://www.gnu.org/licenses/>.
#
#############################################################################
# note: if you'd like a different license, just let me know which and why
#############################################################################


#############################################################################
#############################################################################
##
## isobuild
##
##
## DESCRIPTION
##
## isobuild presumes it is run on standard pungi capable platform, e.g.
## SL60/F13/, and proceeds to generate pungi output in a thusly more easily
## reproducible fashion
##
##
## LONG TERM ROADMAP
##
## -
##
## NOTES
##
## - 
##
#############################################################################


## TODO
# -


#############################################################################
#############################################################################
##
## get runtime environment
##
starttime="$( date +%Y%m%d%H%M%S )"
progname="$( basename $0 )"
# less confusing output messages when run as embedded /tmp/x-run
progname="isobuild"
progdir=$( ( pushd $( dirname $( readlink -e $0 ) ) > /dev/null 2>&1 ; \
    pwd ; popd > /dev/null 2>&1 ) )
rundir="$( pwd )"
mypid=$$


#############################################################################
#############################################################################
##
## constant and option default definitions
##


#############################################################################
#############################################################################
##
## main
##

### presumption, this is run as root from /etc/rc.d/rc.local on a system that
### has just had a min-sl60 kickstart installation (basic 'minimal' sl60 install)

# gotta start somewhere
cd /root

# pungi requires selinux not be enforcing
setenforce 0

mv /etc/yum.repos.d /etc/yum.repos.d.orig
mkdir /etc/yum.repos.d
cat <<EOF > /etc/yum.repos.d/sl.repo
[sl]
name=Scientific Linux \$releasever - \$basearch
# yumvars seem pretty stupid, needing to be full directory entries, i.e. this doesn't work,
# nor does \${releasever} work...
#baseurl=http://10.0.2.2:8421/cache/ftp.scientificlinux.org___linux__scientific__\$releasever__\$basearch__os/
baseurl=http://10.0.2.2:8421/cache/ftp.scientificlinux.org___linux__scientific__6.0__x86_64__os/
#mirrorlist=http://ftp.scientificlinux.org/linux/scientific/mirrorlist/sl-base-6.txt
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-sl file:///etc/pki/rpm-gpg/RPM-GPG-KEY-dawson
EOF

#cp /etc/yum.repos.d/sl.repo /etc/yum.repos.d/sl.repo.orig
# no need for updates (until an os bug requiring one hits us)
#mv /etc/yum.repos.d/sl-updates.repo /etc/yum.repos.d/sl-updates.repo.orig
#
#sed -i \
#    -e 's|http://ftp.scientificlinux.org|ftp://ftp.scientificlinux.org|g' \
#    /etc/yum.repos.d/sl.repo
#
#sed -i \
#    -e 's|ftp://ftp.scientificlinux.org/linux/scientific/$releasever/$basearch/os|http://10.0.2.2:8421/cache/ftp.scientificlinux.org___l#inux__scientific__$releasever__$basearch__os|g' \
#    /etc/yum.repos.d/sl.repo

# for rpmbuild(--rebuild)
yum -y install rpm-build

# for rebuilding pigz
yum -y install gcc
yum -y install zlib-devel

# for rpmdev-setuptree (not used) 
#yum -y install rpm-build

# for general utility (not used)
#yum -y install lftp

# for external data pulling (should already be installed
yum -y install wget

# for rebuilding python-kid
yum -y install python-docutils

# for mock
yum -y install python-decoratortools

# for rebuilding pungi
yum -y install python-devel

# for running pungi
yum -y install anaconda-runtime

# for running pungi to yield i386 media on x86_64 host
#yum -y install epel-release
#yum -y install mock
# or alternately without bringing 'all' of epel into things-

## install pubkeys for verifying .src.rpm signatures
#wget ftp://ftp.linux.ncsu.edu/pub/fedora/linux/releases/13/Everything/i386/os/RPM-GPG-KEY-fedora-13-primary
wget http://10.0.2.2:8421/cache/one-off-files/RPM-GPG-KEY-fedora-13-primary
rpm --import RPM-GPG-KEY-fedora-13-primary
#wget wget ftp://ftp.linux.ncsu.edu/pub/epel/RPM-GPG-KEY-EPEL-6
wget http://10.0.2.2:8421/cache/one-off-files/RPM-GPG-KEY-EPEL-6
rpm --import RPM-GPG-KEY-EPEL-6

## get python-kid installed, needed by repoview
#wget ftp://ftp.linux.ncsu.edu/pub/fedora/linux/releases/13/Everything/source/SRPMS/python-kid-0.9.6-6.fc13.src.rpm
wget http://10.0.2.2:8421/cache/one-off-files/python-kid-0.9.6-6.fc13.src.rpm
if ( ! rpm --checksig python-kid-0.9.6-6.fc13.src.rpm ); then
    echo "${progname}: fatal error, python-kid signature could not be verified as correct"
    exit 1
fi
rpmbuild --rebuild python-kid-0.9.6-6.fc13.src.rpm
rpm -Uvh /rpmbuild/RPMS/noarch/python-kid-0.9.6-6.el6.noarch.rpm

## get repoview installed, needed by pungi
#wget ftp://ftp.linux.ncsu.edu/pub/fedora/linux/releases/13/Everything/source/SRPMS/repoview-0.6.5-1.fc13.src.rpm
wget http://10.0.2.2:8421/cache/one-off-files/repoview-0.6.5-1.fc13.src.rpm
if ( ! rpm --checksig repoview-0.6.5-1.fc13.src.rpm ); then
    echo "${progname}: fatal error, repoview signature could not be verified as correct"
    exit 1
fi
rpmbuild --rebuild repoview-0.6.5-1.fc13.src.rpm 
rpm -Uvh /rpmbuild/RPMS/noarch/repoview-0.6.5-1.el6.noarch.rpm


## get pungi
#wget ftp://ftp.linux.ncsu.edu/pub/fedora/linux/releases/13/Everything/source/SRPMS/pungi-2.0.21-1.fc13.src.rpm
# note: fixing a bug by adding 'cache' here is what I was doing 
#       when I discovered on slashdot that Steve Jobs died.  R.I.P.
wget http://10.0.2.2:8421/cache/one-off-files/pungi-2.0.21-1.fc13.src.rpm
if ( ! rpm --checksig pungi-2.0.21-1.fc13.src.rpm ); then
    echo "${progname}: fatal error, pungi signature could not be verified as correct"
    exit 1
fi
rpmbuild --rebuild pungi-2.0.21-1.fc13.src.rpm
rpm -Uvh /rpmbuild/RPMS/noarch/pungi-2.0.21-1.el6.noarch.rpm

## get pigz installed, needed by mock
#wget ftp://ftp.linux.ncsu.edu/pub/epel/6/SRPMS/pigz-2.1.6-1.el6.src.rpm
wget http://10.0.2.2:8421/cache/one-off-files/pigz-2.1.6-1.el6.src.rpm
if ( ! rpm --checksig pigz-2.1.6-1.el6.src.rpm ); then
    echo "${progname}: fatal error, pigz signature could not be verified as correct"
    exit 1
fi
rpmbuild --rebuild pigz-2.1.6-1.el6.src.rpm
rpm -Uvh /rpmbuild/RPMS/x86_64/pigz-2.1.6-1.el6.x86_64.rpm

## get mock installed, needed by pungi-x32(i386 output)
#wget ftp://ftp.linux.ncsu.edu/pub/epel/6/SRPMS/mock-1.1.12-1.el6.src.rpm
wget http://10.0.2.2:8421/cache/one-off-files/mock-1.1.12-1.el6.src.rpm
if ( ! rpm --checksig mock-1.1.12-1.el6.src.rpm ); then
    echo "${progname}: fatal error, mock signature could not be verified as correct"
    exit 1
fi
rpmbuild --rebuild mock-1.1.12-1.el6.src.rpm
rpm -Uvh /rpmbuild/RPMS/noarch/mock-1.1.12-1.el6.noarch.rpm


## run pungi non-mock for x86_64 (TODO: may as well run it under mock for consistency)
mkdir /root/pungi-workarea
mkdir /root/pungi-workarea/cache
mkdir /root/pungi-workarea/output

# TODO: yuminst git, and git clone Asc tree, to get 

pungi \
    --cachedir=/root/pungi-workarea/cache \
    --destdir=/root/pungi-workarea/output \
    --name Ascendos \
    --bugurl=http://bugzilla.ascendos.org \
    --fulltree \
    --selfhosting \
    --nosplitmedia \
    --config=http://10.0.2.2:8421/pungi-x86_64.ks

# save space for now (same thing theoretically made later for i386 run)
rm -rvf /root/pungi-workarea/output/*/source/SRPMS > /root/pungi-workarea/output/deleted.SRPMS.list.txt

adduser xmock
usermod -a -G mock xmock
wget -O /etc/mock/mock-for-pungi-el6-i386.cfg \
    http://10.0.2.2:8421/mock-for-pungi-el6-i386.cfg

su - -c "mock -r mock-for-pungi-el6-i386 --init" xmock
su - -c "mock -r mock-for-pungi-el6-i386 --no-clean --install wget" xmock
su - -c "mock -r mock-for-pungi-el6-i386 --no-clean --install anaconda-runtime" xmock
cp -av /rpmbuild/RPMS/noarch/python-kid-0.9.6-6.el6.noarch.rpm \
    /var/lib/mock/mock-for-pungi-el6-i386/root/root/
su - -c "mock -r mock-for-pungi-el6-i386 --no-clean --shell 'rpm -Uvh /root/python-kid-\*'" xmock
cp -av /rpmbuild/RPMS/noarch/repoview-0.6.5-1.el6.noarch.rpm \
    /var/lib/mock/mock-for-pungi-el6-i386/root/root/
su - -c "mock -r mock-for-pungi-el6-i386 --no-clean --shell 'rpm -Uvh /root/repoview-\*'" xmock
cp -av /rpmbuild/RPMS/noarch/pungi-2.0.21-1.el6.noarch.rpm \
    /var/lib/mock/mock-for-pungi-el6-i386/root/root/
su - -c "mock -r mock-for-pungi-el6-i386 --no-clean --shell 'rpm -Uvh /root/pungi-\*'" xmock
su - -c "mock -r mock-for-pungi-el6-i386 --no-clean --shell 'mkdir /root/pungi-workarea'" xmock
su - -c "mock -r mock-for-pungi-el6-i386 --no-clean --shell 'mkdir /root/pungi-workarea/cache'" xmock
su - -c "mock -r mock-for-pungi-el6-i386 --no-clean --shell 'mkdir /root/pungi-workarea/output'" xmock

# note sure about what works for multilinebreaking here, too tired to care
su - -c "mock -r mock-for-pungi-el6-i386 --no-clean --chroot 'pungi --cachedir=/root/pungi-workarea/cache --destdir=/root/pungi-workarea/output --name Ascendos --bugurl=http://bugzilla.ascendos.org --fulltree --selfhosting --nosplitmedia --config=http://10.0.2.2:8421/pungi-i386.ks" xmock

# prepare output for the external user
if [ -f /tmp/disk-sdb-is-going-to-get-overwritten ]; then
    tar cvf /dev/sdb /root/pungi-workarea/output /var/lib/mock/mock-for-pungi-el6-i386/root/root/pungi-workarea/output
fi

# done, goodbye
init 0


###

#############################################################################
## end script - only notes below
#############################################################################
#
#
# TODO: share pungi arch kickstarts with %include and ksflatten


