#!/usr/bin/env bash
#
#############################################################################
#############################################################################
##
## el-build system options
##
#############################################################################
#############################################################################


## TODO: move appropriate parts of this to 6/6.0/configs/el-build.cfg


#############################################################################
#############################################################################
##
## baking options
##

#############################################################################
# use this to skip the attempt to update the net cache used for bake input
x_bake_offline="no"

#############################################################################
# use this to skip some of the following phases:
# compile-sources
# installer-traditional-x64
# installer-traditional-x32
# installer-live-x64
# installer-live-x32
# populate-staging-repo
x_bake_do_bake_phases="all"

#############################################################################
# output here: minimum?preferred: 50G+ free space
x_bake_outputdir="${rundir}/bake-output"

#############################################################################
# workareas: minimum?preferred: 250G+ free space
# (note: space reqs to be drastically reduced in subsequent versions)

x_bake_homedotdir="${HOME}/.el-build"

# space for net os repo mirrors is taken here
x_bake_cachedir="${x_bake_homedotdir}/cache"
# space building/baking vms is taken here
x_bake_tmpdir="${x_bake_homedotdir}/tmp"

#############################################################################
# ram size for installation and processing of baking-chef node vm
# todo: benchmark and tune, yum and creatrepo seem to be memory hogs
x_builder_vm_memory=1024

#############################################################################
# feeds into end-user installers, and their boot media filenames, etc...
x_bake_distroname="Ascendos"

# used by livecd-creator, (limited to filename friendly single word?)
# TODO: recent churn, if all is working again, will make this implied as
#   above with ' ' changed to '_' if needed
x_bake_live_label="Ascendos"

# used by livecd-creator, pungi, ... (todo: xorg/etc...?)
x_bake_bug_url="http://bugzilla.ascendos.org"

#############################################################################
# used by pungi
x_bake_distrover="6.0"

#############################################################################
# ends up in /etc/system-release, default motd, gdm greeter, ...
x_bake_distrorelname="nameless"

#############################################################################
# use this to use for instance build.ascendos.org SRPMS instead of your own
#x_bake_tdv_src_repo="http://build.ascendos.org/linux/ascendos/SRPMS"
x_bake_tdv_src_repo="self-generated-from-deltas"

#############################################################################
# use this to have the installer generating bake phases use this specified
# repo of binary rpms instead of the internal output from koji working against
# the srpms generated from the devtree default configuration.
#x_bake_tdv_bin_repo="http://build.ascendos.org/linux/ascendos/6.0
x_bake_tdv_bin_repo="self-generated-from-compiled-sources"

#############################################################################
# generally for dev/debugging, not end-use
x_bake_bake_flags=""

#############################################################################
# only compile these src.rpm(s) instead of all available
x_bake_test_package_list=""

#############################################################################
## presumption for x_bake_config_* is to first check in ./, then
##   ${x_devdir}/6/distrover/ and for rest to check relative devtree/
##   (e.g. Ascendos/) 
## TODO: ensure that full/non-relative paths work with all
#############################################################################

#############################################################################
# Traditional DVD/netinst-iso install .iso image configurations
x_bake_traditional_x32_installer_ks_config="6/6.0/configs/pungi-i386.ks"
x_bake_traditional_x64_installer_ks_config="6/6.0/configs/pungi-x86_64.ks"

#############################################################################
# LiveCD/DVD/USB installable image configurations
# need to abstract liveos strains into a config file, i.e. games/astronomy/etc...
x_bake_livecd_x32_installer_ks_config="6/6.0/configs/livecd-desktop-i386.ks"
x_bake_livecd_x64_installer_ks_config="6/6.0/configs/livecd-desktop-x86_64.ks"
x_bake_livedvd_x32_installer_ks_config="6/6.0/configs/livedvd-desktop-i386.ks"
x_bake_livedvd_x64_installer_ks_config="6/6.0/configs/livedvd-desktop-x86_64.ks"

#############################################################################
# which kickstart to use for the baking vm
x_builder_vm_ks_config="6/6.0/configs/min-el60-x64.ks"

#############################################################################
# this should be made dynamic at runtime between a specified range
x_builder_user_httpd_port=8421

#############################################################################
# seconds between checks to see if processing in the vm completed
x_builder_vm_shutdown_polling_frequency=30

#############################################################################
# size of builder's filesystem sizes (needs to be 'big enough(tm)')
x_builder_vm_root_fs_size=111G
x_builder_vm_scratch_fs_size=111G
x_builder_vm_output_fs_size=111G

#############################################################################
# how many old baker vm definitions to clog up virsh with
# ('virsh list --all' housekeeping)
x_keep_old_baker_vm_definitions=3

#############################################################################
# sha256sum of bootstrap os' x86_64 netinst.iso basically
#
# note: current understanding is that this, combined with the devtree
#   RPM-GPG keys, are the root of upstream integrity checking.  I.e. this is
#   used to verify the netinst iso and/or pxe style kernel/initramfs images
#   that virt-install uses to build the baking vm's initial OS image.  So
#   its included keys are then used to verify incoming packages installed
#   with yum.  The other keys under infra/security/keys/RPM-GPG-KEY* are
#   subsequently imported and used to check all other upstream packages
#   (build deps and output targets and sources of both) as they flow into
#   the bake from the ~/.el-build/cache which was populated by the bake from
#   the internets.  
#
# todo: sometime try rebuilding all yum repo metadata in the el-build cache,
#   partly because it could be bad for some window while it was fetched, and
#   partly to remove it as an input to the system, i.e. reduced threat
#   surface.
#
# reviewer: please make some assessment of, or modification to above comments
#
x_bake_vm_os_installer_hash="f839fec8fa8d1e7af9e387725cb4559f6522d9c0af0eca72f2b437a101fc5bfe"
# or sigh, virt-installer appears to be using the PXE stuffs
# todo: pull kernel/initrd from boot/netinst .iso and put in place for vi to
#       use.  reduces maintenance ever so slightly, and more in tune with 
#       how upstreams have been providing checksums/signatures.
x_bake_vm_os_installer_kernel_hash="67c73f849ff756e37d10931faf84ac009178176cc02914d027f71d9793c805266a9136cd32a65b87542076f37b268002f1314c9547ca04bf599ef48ef226c1f4"
x_bake_vm_os_installer_initramfs_hash="f220e91480125125cc3915edb224271f7391e9eaeb05f3059eceba149040d71ddad47ea2186502c9282c9ffd121275496d78086807c903e09f0216b25629390e"

#############################################################################
# something once broke that this fixed ...
x_bake_clear_bootstrapos_repodata="no"

#############################################################################
# Bootstrapping OS Dependencies (the majority of system input from upstreams)
#
# note: default build target should be the first in the list, and the
#   others should have a configs/build-against-NAME.pkglist config file
#   listing the package set
#
# note: koji makes a \$arch directory component mandatory
#
x_dependent_bootstrap_os_list="\
sl60:ftp://ftp.scientificlinux.org/linux/scientific/6.0/\$arch/os/
f13:http://archive.fedoraproject.org/pub/archive/fedora/linux/releases/13/Everything/\$arch/os/
f12:http://archive.fedoraproject.org/pub/archive/fedora/linux/releases/12/Everything/\$arch/os/
rhel6beta:ftp://ftp.redhat.com/redhat/rhel/beta/6/\$arch/os/
"

#############################################################################
# upstream input repositories to be mirrored and available to the baker
# 
# TODO: most or all of mirror_dirs entries could be generated from
#   dependent_bootstrap_os_list (perhaps better renamed as
#   dependent_bootstrap_repo_list)
#
# TODO: add a method for specifying a mirror to use if desired for any entry
#
# TODO: this is a terribly lazy first pass overkill overmirroring.  two
#   possible methods come to mind to reign it in.  First would be to use
#   some sort of proxy for these sites and have it only store what is
#   actually used.  But that doesn't make it so easy to seperate the first
#   phase of caching/mirroring and the second phase (because the second
#   phase dictates what is/needs to be cached).  What I'm thinking of now
#   as a 2nd pass quick hack is to use the user-httpd logs to generate the
#   list of actually used bootstrapping packages, and generate a manifest,
#   which can be checked in as a config file, and used by subsequent runs
#   for mirrors on the order of a few gigabytes, rather than over 100.
#
# TODO: get ascendos.org off of the list, generated from git devtree instead
#
x_mirror_dirs="\
ftp://ftp.scientificlinux.org/linux/scientific/6x/SRPMS
ftp://ftp.scientificlinux.org/linux/scientific/6.0/x86_64/os
ftp://ftp.scientificlinux.org/linux/scientific/6.0/i386/os
ftp://mirrors.kernel.org/pub/fedora-epel/6/SRPMS
ftp://mirrors.kernel.org/pub/fedora-epel/6/i386
ftp://mirrors.kernel.org/pub/fedora-epel/6/x86_64
http://archive.fedoraproject.org/pub/archive/fedora/linux/releases/13/Everything/source
http://archive.fedoraproject.org/pub/archive/fedora/linux/releases/13/Everything/i386/os/Packages
http://archive.fedoraproject.org/pub/archive/fedora/linux/releases/13/Everything/x86_64/os/Packages
http://archive.fedoraproject.org/pub/archive/fedora/linux/releases/13/Everything/x86_64/iso
http://archive.fedoraproject.org/pub/archive/fedora/linux/releases/12/Everything/source
http://archive.fedoraproject.org/pub/archive/fedora/linux/releases/12/Everything/i386/os/Packages
http://archive.fedoraproject.org/pub/archive/fedora/linux/releases/12/Everything/x86_64/os/Packages
ftp://ftp.redhat.com/redhat/rhel/beta/6/source/SRPMS
ftp://ftp.redhat.com/redhat/rhel/beta/6/i386/os/Packages
ftp://ftp.redhat.com/redhat/rhel/beta/6/x86_64/os/Packages
http://build.ascendos.org/linux/ascendos/build
"

#############################################################################
# one-off files in addition to above
x_mirror_files="\
"

#############################################################################
# current exposure of alpha ascendos koji metadata, for bigboard chartmaking
x_asc_koji_dump_file="http://build.ascendos.org/linux/development/dmc/koji-buildinfo-dumps/asc-bs-info-dump-latest.tar.bz2"

#############################################################################
# Significant build tools versions specification
# (somewhat obviated by bringing all of epel6 in as a dependency)
#
# TODO: use yumdownloader to calculate these, but also make sure that
#   these are archived in or out of devtree somewhere 
#   (as epel seems to be a rolling repo)
x_pigz_version="2.1.6-1"
x_mock_version="1.1.15-1"
x_livecdtools_version="13.4-1"

#############################################################################
# zyx-liveinstaller is a cool proof-of-concept installer that got some
# smoke testing in SugarOnAStick-v2-blueberry, though everyone but sdz
# seemed to get confused thinking it was an improved liveusb-creator, rather
# than an improved liveinst/anaconda.
#
# setting this flag to 1 will cause the output of livecd-creator to include
# zyx-liveinstaller to support rebootless LiveOS installation.  I.e. as
# the installer runs, the readonly+in_readwrite_overlay rootfs disk images
# are devicemapper mirrored to the target device, such that upon completion
# the desktop the user has been using all along is the final installed 
# desktop, and the LiveCD/DVD/USB can be removed, and theoretically no reboot
# is necessary (well, until the user wants an updated kernel, though there
# is the not-yet-supported ksplice feature that helps that case.  Required
# OS reboots should be considered bugs in my book...
x_enable_rebootless_liveos_installer_installation=0

if (("${x_enable_rebootless_liveos_installer_installation}")); then
    x_mirror_files="\
${x_mirror_files}
http://cloudsession.com/dawg/downloads/zyx-liveinstaller/zyx-liveinstaller-0.2.8-1.src.rpm
"
fi

#############################################################################
# cause a complete copy of the devtree used to generate the output to
# be available on the filesystem of the resulting output livecd/dvd/usbs,
# such that they themselves contain all the build code needed regenerate
# themselves completely from uncompiled sources.
#
# TODO: after update-net-cache (pre)pruning implemented, have flag to
#   generate partner 'with-source isos' for the 'genesis' live images.
#
x_enable_devtree_inclusion_in_live_output=0

#############################################################################
# interesting internal intermediate data placement
x_cached_datesorted_list_filename="${x_bake_cachedir}/tuv.srpms.datesorted.list"
x_cached_repochart_text_filename="${x_bake_cachedir}/tuv.srpms.repochart.txt"
x_cached_bigboard_csv_filename="${x_bake_cachedir}/tuv.srpms.bigboard.csv"
x_cached_bigboard_html_filename="${x_bake_cachedir}/tuv.srpms.bigboard.html"
x_cached_generated_srpm_repo="${x_bake_cachedir}/tdv.SRPMS"

#############################################################################
# presently the update-net-cache will mirror 100+G instead of the maybe
# 6-12G I would guess it really needs.  This will be fixed in subsequent
# versions.  For now, if you understand that, and don't mind that, go ahead
# and change this to yes.
x_i_can_justify_this_network_bandwidth_to_myself=no


#############################################################################
#############################################################################
##
## staging options
##


#############################################################################
#############################################################################
##
## internal constants/definitions

#############################################################################
# who to ping (-c3) as a sanity check for onlineness
x_internet_online_check_host=mirrors.kernel.org

#############################################################################
# not really variable, could be moved elsewhere
x_builder_vm_host_ip=10.0.2.2

#############################################################################
# todo: shouldn't be necessary, or even should be done for all input repos
x_regen_some_input_yum_metadata=1

#############################################################################
# try and update external koji metadata
x_refetch_external_koji_metadata=1


#############################################################################
#############################################################################
##
## end script, only notes below ...
##

# TODO: need this and other adjustable/tunable performance knobs
# grep for setup*hub*loose*ends in koji-setup-scripts
#x_koji_self_build_host_load_avg_threshold=2

# TODO: support [--config=<configfile=~/.el-build/config>]

# dmc: It would be my guess that it is worth 'modifying' more source
#   packages such that x_dependent_bootstrap_os_list could be reduced to
#   ideally a single entry


