#!/usr/bin/env bash
#
#############################################################################
#############################################################################
#
# pre-bake-clean
#
# clean up residue from prior cooks
#
#############################################################################
#
# Copyright 2007-2011 Douglas McClendon <dmc AT filteredperception DOT org>
#
#############################################################################
#
# This file is part of X.
#
#    X is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    X is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with X.  If not, see <http://www.gnu.org/licenses/>.
#
#############################################################################
# note: if you'd like a different license, just let me know which and why
#############################################################################


#############################################################################
#############################################################################
##
## pre-bake-clean
##
##
## DESCRIPTION
##
## cleans up old baker vm definitions and reaps stale user-httpd processes
##
##
#############################################################################


#############################################################################
#############################################################################
##
## local constant definitions
##

# for common script library- libx.sh
x_toolname="el-build"
x_prefix=/usr


#############################################################################
#############################################################################
##
## load system library
##

if [ -f "$( dirname $( readlink -e $0 ) )/../../tools/scripts/libx.sh" ]; then
    source "$( dirname $( readlink -e $0 ) )/../../tools/scripts/libx.sh"
elif [ -f "${x_prefix}/lib/${x_toolname}/scripts/libx.sh" ]; then 
    source "${x_prefix}/lib/${x_toolname}/scripts/libx.sh" 
else
    echo "$0: error: fatal: could not load ${x_toolname} system library libx.sh"
    exit 1
fi


#############################################################################
#############################################################################
##
## constant and option default definitions
##

# to enable debug messages if desired
x_debug=0

# to suppress status messages if desired
x_quiet=0


#############################################################################
#############################################################################
##
## functions
##
function usage {
    echo ""
    echo "usage:"
    echo ""
    echo "${progname} \\"
    echo "    [command options...]"
    echo ""
    echo ""
    exit 1
}


#############################################################################
#############################################################################
##
## main
##

status "initializing..."

homedotdir="${1}"

if [ ! -d "${homedotdir}" ]; then
    die "homedotdir: ${homedotdir} is not accessible"
fi

tmpdir=$( setup_tmpdir )

num_bakes=$( virsh list --all \
    | awk '{print $2}' \
    | grep "^bake" \
    | wc -l )

num_stale_bakes=$( \
    echo "${num_bakes} - ${x_keep_old_bake_vm_definitions}" \
    | bc -l )

stale_bakes=$( virsh list --all \
    | awk '{print $2}' \
    | grep "^bake" \
    | sort \
    | head "-${num_stale_bakes}" )

for stale_bake in ${stale_bakes}; do

    status "saving xml for stale bake vm ${stale_bake} ..."
    virsh \
	dumpxml \
	"${stale_bake}" \
	> "${tmpdir}/.stale.baker_vm.${stale_bake}.xml" 2>&1

    status "undefining stale bake vm ${stale_bake} ..."
    virsh \
	undefine \
	"${stale_bake}" \
	> "${tmpdir}/.stale.baker_vm.${stale_bake}.undef.log" 2>&1

done

target_pids_to_check=$( \
    ps auwwx \
    | grep httpd \
    | grep "\.bake\/" \
    | sed -e 's/^\(.*\/\)\([^\/]*\)\(\.bake\)\(\/.*\)$/\2/' \
    | sed -e 's/^[^\.]*\.//' \
    | sort \
    | uniq )

for target_pid in ${target_pids_to_check}; do
    # if the user-httpd process's parent pid is not running, shut it down
    if ( ! ps "${target_pid}" > /dev/null 2>&1 ); then
	status \
	    "shutting down httpd service from prior bake" \
	    "with pid ${target_pid} ..."
	user-httpd \
	    na na \
	    "${homedotdir}/tmp/"*".${target_pid}.bake/user-httpd/etc" \
	    stop
    fi
done


#############################################################################
## end script - only notes below
#############################################################################
#
#
#

