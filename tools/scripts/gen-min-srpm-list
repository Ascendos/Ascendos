#!/usr/bin/env bash
#
#############################################################################
#############################################################################
#
# gen-min-srpm-list (a first phase of src-pkg-repo-diff)
#
# src-pkg-repo-diff generates a set of abbreviated comparisons of two 
#                   related source package (src.rpm) repositories.
#
#############################################################################
#
# Copyright 2011 Douglas McClendon <dmc AT filteredperception DOT org>
#
#############################################################################
#
# This file is part of X.
#
#    X is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    X is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with X.  If not, see <http://www.gnu.org/licenses/>.
#
#############################################################################
# note: if you'd like a different license, just let me know which and why
#############################################################################


#############################################################################
#############################################################################
##
## src-pkg-repo-diff--gen-min-srpm-list \
##     [<output_file>=<input_right>.repo-diff.srpm-list] \
##     [[<input_left>=${HOME}/.el-build/cache/ftp/ftp.tuv.com/tuv/linux/enterprise/6Superset/en/os/SRPMS] \
##     [<input_right>=${HOME}/.el-build/cache/build.ascendos.org/linux/ascendos/SRPMS]]
##
##
## DESCRIPTION
##
## ...
##
##
## NOTES
##
## - input_left and _right must both be specified if at all
##
#############################################################################

## TODO
# - ...
#  - all very hardcoded for initial asc workflow, improve flexibility/utility
#  - definitely should support diffing sl6/etc... as well against tuv, for
#    sanity comparison and reference value


#############################################################################
#############################################################################
##
## local constant definitions
##

# for common script library- libx.sh
x_toolname="el-build"
x_prefix=/usr


#############################################################################
#############################################################################
##
## load system library
##

if [ -f "$( dirname $( readlink -e $0 ) )/../../tools/scripts/libx.sh" ]; then
    source "$( dirname $( readlink -e $0 ) )/../../tools/scripts/libx.sh"
elif [ -f "${x_prefix}/lib/${x_toolname}/scripts/libx.sh" ]; then 
    source "${x_prefix}/lib/${x_toolname}/scripts/libx.sh" 
else
    echo "$0: error: fatal: could not load ${x_toolname} system library libx.sh"
    exit 1
fi


#############################################################################
#############################################################################
##
## constant and option default definitions
##

# to enable debug messages if desired
x_debug=0

# to suppress status messages if desired
x_quiet=0


#############################################################################
#############################################################################
##
## functions
##
function usage {
    echo ""
    echo "usage:"
    echo ""
    echo "${progname} ... (TODO/FIXME)"
    echo ""
    echo ""
    exit 1
}


#############################################################################
#############################################################################
##
## main
##

status "initializing..."


#############################################################################
### retrieve arguments/options
if [ $# -eq 0 ]; then 
    input_left=$( readlink -e "${HOME}/.el-build/cache/ftp/ftp.tuv.com/tuv/linux/enterprise/6Superset/en/os/SRPMS" )
    input_right=$( readlink -e "${HOME}/.el-build/cache/build.ascendos.org/linux/ascendos/SRPMS" )
    output_file=${input_right}.repo-diff.srpm-list
elif [ $# -eq 1 ]; then 
    output_file=$( readlink -f "${1}" )
    input_left=$( readlink -e "${HOME}/.el-build/cache/ftp/ftp.tuv.com/tuv/linux/enterprise/6Superset/en/os/SRPMS" )
    input_right=$( readlink -e "${HOME}/.el-build/cache/build.ascendos.org/linux/ascendos/SRPMS" )
elif [ $# -eq 2 ]; then 
    # I don't see a particularly useful way to do something intuitive here
    usage
elif [ $# -eq 3 ]; then 
    output_file=$( readlink -f "${1}" )
    input_left=$( readlink -e "${2}" )
    input_right=$( readlink -e "${3}" )
else
    usage
fi

#############################################################################
### validate args
if [ -f "${output_file}" ]; then
    die "output file ${output_file} already exists"
fi

if [ ! -d "${input_left}" ]; then
    die "input_left directory ${input_left} does not exist"
fi

if [ ! -d "${input_right}" ]; then
    die "input_right directory ${input_right} does not exist"
fi



#############################################################################
### tmpdir
tmpdir=$( setup_tmpdir )


#############################################################################
### calculate list of modified source packages

pkg_list_left=$( ls -1A "${input_left}/"*.src.rpm | sed -e 's/.*\///g' | sort --version-sort )

pkg_list_right_all=$( ls -1A "${input_right}/"*.src.rpm | sed -e 's/.*\///g' | sort --version-sort ) 

debug "list reduction phase: remove left duplicates"
## list reduction phase: remove packages in the left set and unchanged(TODO)
pkg_list_right_modified="${pkg_list_right_all}"
for pkg in ${pkg_list_right_all}; do
    debug "checking for duplicates of ${pkg} ..."
#    debug "list reduction phase removeing packages in the left set unchanged: scanning: ${pkg}"
    # see if same named package exists in the left set
    if [ -f "${input_left}/${pkg}" ]; then
#	debug "found left set package, (TODO verify identical other than signatures)"
	# TODO: verify that rpm2cpio cpio contents match (i.e. all but sigs?)
	pkg_list_right_modified=$( listremove "${pkg}" "${pkg_list_right_modified}" )
    fi
done


for pkg in ${pkg_list_right_modified}; do
    debug "modified package list: ${pkg}"
    if ( ! echo "${pkg}" | grep -q "\.asc\..*src.rpm$" ); then
	# sigh... extra case for tuv logos off-off-spec package naming
	if ( ! echo "${pkg}" | grep -q "\.asc6\.src\.rpm$" ); then
	    die "modified bug NON .asc .src.rpm found in pkg_list_right, even after all pkg_list_left packages were removed from it."
	fi
    fi
done 


debug "list reduction phase: remove obsoleted right modified versions"

## reduce list, only interested in latest of asc.X version series
pkg_list_right_reduced="${pkg_list_right_modified}"
pkg_list_right_modified=$( listreverse "${pkg_list_right_modified}" )
# we know we are iterating in sort --version-sort(ed) order
for pkg in ${pkg_list_right_modified}; do
    debug "checking for obsoleted versions of ${pkg} ..."
    # we know this is a .asc.*src.rpm
    asc_version=$( get_asc_version "${pkg}" )

    # don't bother with .asc versions which have no lesser suffixed versions
    if ((${asc_version})); then
	for (( i=$(( ${asc_version} - 1 )) ; ${i} >= 0 ; i=$(( ${i} - 1 )) )); do
	    target_pkg=$( set_asc_version ${i} "${pkg}" )
	    pkg_list_right_reduced=$( listremove "${target_pkg}" "${pkg_list_right_reduced}" )
	done
    fi
done 

for pkg in ${pkg_list_right_reduced}; do
    debug "irreducible modified package: ${pkg}"
    echo "${pkg}" >> "${output_file}"
done 

#############################################################################
### cleanup
rm -rf "${tmpdir}"
debug "goodbye..."

### end script, only notes below...
#############################################################################
#############################################################################
#############################################################################
#
# ...



