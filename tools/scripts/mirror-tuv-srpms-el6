#!/usr/bin/env bash
#
#############################################################################
#############################################################################
#
# mirror-tuv-srpms-el6 mirrors a popular set of open sources
#
#############################################################################
#
# Copyright 2011 Douglas McClendon <dmc AT filteredperception DOT org>
#
#############################################################################
#
# This file is part of X.
#
#    X is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    X is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with X.  If not, see <http://www.gnu.org/licenses/>.
#
#############################################################################
# note: if you'd like a different license, just let me know which and why
#############################################################################


#############################################################################
#############################################################################
##
## mirror-tuv-el6-srpms <cachedir> (e.g. ~/.el-build/cache)
##
##
## DESCRIPTION
##
## mirror-tuv-el6-srpms will mirror all four flavors of source rpms and
## updates from the tuv or one of its mirrors.   And perhaps a few other
## related tasks or added flexibility in the future.
##
##
## NOTES
##
## -
##
#############################################################################


## TODO
# - use rsync
# - ...
#


#############################################################################
#############################################################################
##
## local constant definitions
##

# for common script library- libx.sh
x_toolname="el-build"
x_prefix=/usr


#############################################################################
#############################################################################
##
## load system library
##

if [ -f "$( dirname $( readlink -e $0 ) )/../../tools/scripts/libx.sh" ]; then
    source "$( dirname $( readlink -e $0 ) )/../../tools/scripts/libx.sh"
elif [ -f "${x_prefix}/lib/${x_toolname}/scripts/libx.sh" ]; then 
    source "${x_prefix}/lib/${x_toolname}/scripts/libx.sh" 
else
    echo "$0: error: fatal: could not load ${x_toolname} system library libx.sh"
    exit 1
fi


#############################################################################
#############################################################################
##
## constant and option default definitions
##

# to enable debug messages if desired
x_debug=0

# to suppress status messages if desired
x_quiet=0


# excessive and/or amusing vendor name use avoidance
tuv_name_lc_enc="erqung"

## todo: the below should get factored into defaults

# todo: for production and lowest latency, you'd want to use this
#mirror="ftp://ftp.tuv.com/tuv/linux/enterprise"
# but for development-
#mirror="ftp://ftp.linux.ncsu.edu/mirror/ftp.tuv.com/pub/tuv/linux/enterprise"
mirror="ftp://mirrors.kernel.org/tuv/tuv/linux/enterprise"

flavors="\
6Server
6Workstation
6ComputeNode
6Client
"

#############################################################################
#############################################################################
##
## functions
##
function usage {
    echo ""
    echo "usage:"
    echo ""
    echo "${progname} [<cache directory>=~/.el-build/cache]"
    echo ""
    echo ""
    exit 1
}


#############################################################################
#############################################################################
##
## main
##

status "initializing ..."

tuv_name_lc=$( old_school_crypto "${tuv_name_lc_enc}" )
mirrorx=$( echo "${mirror}" | sed -e "s/tuv/${tuv_name_lc}/g" )

if [ $# -eq 0 ]; then 
    cachedir=$( readlink -e "${HOME}/.el-build/cache" )
elif [ $# -ne 1 ]; then 
    usage
else
    cachedir=$( readlink -e "${1}" )
fi

if ( ! mkdir -p "${cachedir}" ); then
    die "could not create cache directory: ${cachedir}"
fi

# todo: abstract below hardcoded appropriately to defaults, 
#   along with flavorlist above
tuv_flavor_root_cached=$( get_cached_path \
    "${cachedir}" \
    ftp://ftp.tuv.com/tuv/linux/enterprise )
superset_flavor="6Superset"

mkdir -p "${tuv_flavor_root_cached}/${superset_flavor}/en/os/SRPMS"

# note: this does not seem all that graceful.  Patches that reduce runtime and
#   disk i/owithout increasing external network usage are very welcome. 
#   Though this method does get some bonus integrity checking in exchange
#   for the expense of what its doing.

# for each flavor, mirror all the upstream source rpms and merge into
# the superset repository
for flavor in ${flavors}; do

    status "mirroring flavor: ${flavor} ..."
    status "prepopulating flavor target directory to minimize download bandwidth to upstream ..."
    mkdir -p "${tuv_flavor_root_cached}/${flavor}/en/os/SRPMS"
    rsync -aq --delete \
	"${tuv_flavor_root_cached}/${superset_flavor}/en/os/SRPMS/"*.src.rpm \
	"${tuv_flavor_root_cached}/${flavor}/en/os/SRPMS/" 

    status "pulling from the internets ..."
    # mirror one of the flavor's worth of source rpms
    rsync -avH rsync://${mirrorx}/${flavor}/en/os/SRPMS/* ${tuv_flavor_root_cached}/${flavor}/en/os/SRPMS

    status "merging flavor ${flavor} into ${superset_flavor} ..."
    # for each source package in the new set, compare against and merge it with the superset
    for src_pkg in $( ls -1A "${tuv_flavor_root_cached}/${flavor}/en/os/SRPMS/"*.src.rpm ); do
	src_pkg_base=$( basename "${src_pkg}" )
	if [ -e "${tuv_flavor_root_cached}/${superset_flavor}/en/os/SRPMS/${src_pkg_base}" ]; then
	    # compare superset copy with incoming flavor version (should be identical)
	    if ( ! diff -q "${src_pkg}" \
"${tuv_flavor_root_cached}/${superset_flavor}/en/os/SRPMS/${src_pkg_base}" > /dev/null 2>&1 ); then
	        die "UNEXPECTED DIFFERING FILES WITH THE SAME NAME :: ${src_pkg} :: ${tuv_flavor_root_cached}/${superset_flavor}/en/os/SRPMS/${src_pkg_base}"
	    fi
	    # remove the extra copy
	    rm -f "${src_pkg}"
	else
	    status "NEW PACKAGE: copying ${src_pkg_base} to ${superset_flavor}"
	    mv "${src_pkg}" \
		"${tuv_flavor_root_cached}/${superset_flavor}/en/os/SRPMS/${src_pkg_base}"
	fi
	# make the src_pkg be a link to the superset
	ln -s "../../../../${superset_flavor}/en/os/SRPMS/${src_pkg_base}" "${src_pkg}"
    done

done

date >> "${tuv_flavor_root_cached}/${superset_flavor}/en/os/SRPMS.last.update"

### end script, only notes below...
#############################################################################
#############################################################################
#############################################################################
#
# ...
